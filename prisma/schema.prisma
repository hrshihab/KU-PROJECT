// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String     @id @default(uuid())
  email              String     @unique
  password           String
  role               UserRole
  needPasswordChange Boolean    @default(true)
  status             UserStatus @default(ACTIVE)
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
  admin              Admin?
  news               News[]

  @@map("users")
}

model Admin {
  id            String   @id @default(uuid())
  name          String
  email         String   @unique
  profilePhoto  String?
  contactNumber String
  isDeleted     Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user User @relation(fields: [email], references: [email])

  @@map("admins")
}

// ðŸŸ¢ VC Message Model (Vice Chancellor's Message)
model VCMessage {
  id          String   @id @default(uuid())
  message     String
  imageUrl    String?
  updatedAt   DateTime @updatedAt

  @@map("vc_message")
}

model News {
  id          String   @id @default(uuid())
  title       String
  content     String   @db.Text
  imageUrl    String?
  publishDate DateTime @default(now())
  author      User     @relation(fields: [authorId], references: [id])
  authorId    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("news")
}

enum UserRole {
  SUPER_ADMIN
  ADMIN
}

enum UserStatus {
  ACTIVE
  BLOCKED
  DELETED
}

